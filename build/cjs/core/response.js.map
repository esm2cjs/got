{
  "version": 3,
  "sources": ["../../esm/core/response.js"],
  "sourcesContent": ["import { RequestError } from './errors.js';\nexport const isResponseOk = (response) => {\n    const { statusCode } = response;\n    const limitStatusCode = response.request.options.followRedirect ? 299 : 399;\n    return (statusCode >= 200 && statusCode <= limitStatusCode) || statusCode === 304;\n};\n/**\nAn error to be thrown when server response code is 2xx, and parsing body fails.\nIncludes a `response` property.\n*/\nexport class ParseError extends RequestError {\n    constructor(error, response) {\n        const { options } = response.request;\n        super(`${error.message} in \"${options.url.toString()}\"`, error, response.request);\n        this.name = 'ParseError';\n        this.code = 'ERR_BODY_PARSE_FAILURE';\n    }\n}\nexport const parseBody = (response, responseType, parseJson, encoding) => {\n    const { rawBody } = response;\n    try {\n        if (responseType === 'text') {\n            return rawBody.toString(encoding);\n        }\n        if (responseType === 'json') {\n            return rawBody.length === 0 ? '' : parseJson(rawBody.toString(encoding));\n        }\n        if (responseType === 'buffer') {\n            return rawBody;\n        }\n    }\n    catch (error) {\n        throw new ParseError(error, response);\n    }\n    throw new ParseError({\n        message: `Unknown body type '${responseType}'`,\n        name: 'Error',\n    }, response);\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6B;AACtB,MAAM,eAAe,CAAC,aAAa;AACtC,QAAM,EAAE,WAAW,IAAI;AACvB,QAAM,kBAAkB,SAAS,QAAQ,QAAQ,iBAAiB,MAAM;AACxE,SAAQ,cAAc,OAAO,cAAc,mBAAoB,eAAe;AAClF;AAKO,MAAM,mBAAmB,2BAAa;AAAA,EACzC,YAAY,OAAO,UAAU;AACzB,UAAM,EAAE,QAAQ,IAAI,SAAS;AAC7B,UAAM,GAAG,MAAM,eAAe,QAAQ,IAAI,SAAS,MAAM,OAAO,SAAS,OAAO;AAChF,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EAChB;AACJ;AACO,MAAM,YAAY,CAAC,UAAU,cAAc,WAAW,aAAa;AACtE,QAAM,EAAE,QAAQ,IAAI;AACpB,MAAI;AACA,QAAI,iBAAiB,QAAQ;AACzB,aAAO,QAAQ,SAAS,QAAQ;AAAA,IACpC;AACA,QAAI,iBAAiB,QAAQ;AACzB,aAAO,QAAQ,WAAW,IAAI,KAAK,UAAU,QAAQ,SAAS,QAAQ,CAAC;AAAA,IAC3E;AACA,QAAI,iBAAiB,UAAU;AAC3B,aAAO;AAAA,IACX;AAAA,EACJ,SACO,OAAP;AACI,UAAM,IAAI,WAAW,OAAO,QAAQ;AAAA,EACxC;AACA,QAAM,IAAI,WAAW;AAAA,IACjB,SAAS,sBAAsB;AAAA,IAC/B,MAAM;AAAA,EACV,GAAG,QAAQ;AACf;",
  "names": []
}
