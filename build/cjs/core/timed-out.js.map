{
  "version": 3,
  "sources": ["../../esm/core/timed-out.js"],
  "sourcesContent": ["import net from 'node:net';\nimport unhandler from './utils/unhandle.js';\nconst reentry = Symbol('reentry');\nconst noop = () => { };\nexport class TimeoutError extends Error {\n    constructor(threshold, event) {\n        super(`Timeout awaiting '${event}' for ${threshold}ms`);\n        Object.defineProperty(this, \"event\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: event\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = 'TimeoutError';\n        this.code = 'ETIMEDOUT';\n    }\n}\nexport default function timedOut(request, delays, options) {\n    if (reentry in request) {\n        return noop;\n    }\n    request[reentry] = true;\n    const cancelers = [];\n    const { once, unhandleAll } = unhandler();\n    const addTimeout = (delay, callback, event) => {\n        const timeout = setTimeout(callback, delay, delay, event);\n        timeout.unref?.();\n        const cancel = () => {\n            clearTimeout(timeout);\n        };\n        cancelers.push(cancel);\n        return cancel;\n    };\n    const { host, hostname } = options;\n    const timeoutHandler = (delay, event) => {\n        request.destroy(new TimeoutError(delay, event));\n    };\n    const cancelTimeouts = () => {\n        for (const cancel of cancelers) {\n            cancel();\n        }\n        unhandleAll();\n    };\n    request.once('error', error => {\n        cancelTimeouts();\n        // Save original behavior\n        /* istanbul ignore next */\n        if (request.listenerCount('error') === 0) {\n            throw error;\n        }\n    });\n    if (typeof delays.request !== 'undefined') {\n        const cancelTimeout = addTimeout(delays.request, timeoutHandler, 'request');\n        once(request, 'response', (response) => {\n            once(response, 'end', cancelTimeout);\n        });\n    }\n    if (typeof delays.socket !== 'undefined') {\n        const { socket } = delays;\n        const socketTimeoutHandler = () => {\n            timeoutHandler(socket, 'socket');\n        };\n        request.setTimeout(socket, socketTimeoutHandler);\n        // `request.setTimeout(0)` causes a memory leak.\n        // We can just remove the listener and forget about the timer - it's unreffed.\n        // See https://github.com/sindresorhus/got/issues/690\n        cancelers.push(() => {\n            request.removeListener('timeout', socketTimeoutHandler);\n        });\n    }\n    const hasLookup = typeof delays.lookup !== 'undefined';\n    const hasConnect = typeof delays.connect !== 'undefined';\n    const hasSecureConnect = typeof delays.secureConnect !== 'undefined';\n    const hasSend = typeof delays.send !== 'undefined';\n    if (hasLookup || hasConnect || hasSecureConnect || hasSend) {\n        once(request, 'socket', (socket) => {\n            const { socketPath } = request;\n            /* istanbul ignore next: hard to test */\n            if (socket.connecting) {\n                const hasPath = Boolean(socketPath ?? net.isIP(hostname ?? host ?? '') !== 0);\n                if (hasLookup && !hasPath && typeof socket.address().address === 'undefined') {\n                    const cancelTimeout = addTimeout(delays.lookup, timeoutHandler, 'lookup');\n                    once(socket, 'lookup', cancelTimeout);\n                }\n                if (hasConnect) {\n                    const timeConnect = () => addTimeout(delays.connect, timeoutHandler, 'connect');\n                    if (hasPath) {\n                        once(socket, 'connect', timeConnect());\n                    }\n                    else {\n                        once(socket, 'lookup', (error) => {\n                            if (error === null) {\n                                once(socket, 'connect', timeConnect());\n                            }\n                        });\n                    }\n                }\n                if (hasSecureConnect && options.protocol === 'https:') {\n                    once(socket, 'connect', () => {\n                        const cancelTimeout = addTimeout(delays.secureConnect, timeoutHandler, 'secureConnect');\n                        once(socket, 'secureConnect', cancelTimeout);\n                    });\n                }\n            }\n            if (hasSend) {\n                const timeRequest = () => addTimeout(delays.send, timeoutHandler, 'send');\n                /* istanbul ignore next: hard to test */\n                if (socket.connecting) {\n                    once(socket, 'connect', () => {\n                        once(request, 'upload-complete', timeRequest());\n                    });\n                }\n                else {\n                    once(request, 'upload-complete', timeRequest());\n                }\n            }\n        });\n    }\n    if (typeof delays.response !== 'undefined') {\n        once(request, 'upload-complete', () => {\n            const cancelTimeout = addTimeout(delays.response, timeoutHandler, 'response');\n            once(request, 'response', cancelTimeout);\n        });\n    }\n    if (typeof delays.read !== 'undefined') {\n        once(request, 'response', (response) => {\n            const cancelTimeout = addTimeout(delays.read, timeoutHandler, 'read');\n            once(response, 'end', cancelTimeout);\n        });\n    }\n    return cancelTimeouts;\n}\n"],
  "mappings": "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",
  "names": ["unhandler", "net"]
}
