{
  "version": 3,
  "sources": ["../../../esm/core/utils/options-to-url.js"],
  "sourcesContent": ["const keys = [\n    'protocol',\n    'host',\n    'hostname',\n    'port',\n    'pathname',\n    'search',\n];\nexport default function optionsToUrl(origin, options) {\n    if (options.path) {\n        if (options.pathname) {\n            throw new TypeError('Parameters `path` and `pathname` are mutually exclusive.');\n        }\n        if (options.search) {\n            throw new TypeError('Parameters `path` and `search` are mutually exclusive.');\n        }\n        if (options.searchParams) {\n            throw new TypeError('Parameters `path` and `searchParams` are mutually exclusive.');\n        }\n    }\n    if (options.search && options.searchParams) {\n        throw new TypeError('Parameters `search` and `searchParams` are mutually exclusive.');\n    }\n    if (!origin) {\n        if (!options.protocol) {\n            throw new TypeError('No URL protocol specified');\n        }\n        origin = `${options.protocol}//${options.hostname ?? options.host ?? ''}`;\n    }\n    const url = new URL(origin);\n    if (options.path) {\n        const searchIndex = options.path.indexOf('?');\n        if (searchIndex === -1) {\n            options.pathname = options.path;\n        }\n        else {\n            options.pathname = options.path.slice(0, searchIndex);\n            options.search = options.path.slice(searchIndex + 1);\n        }\n        delete options.path;\n    }\n    for (const key of keys) {\n        if (options[key]) {\n            url[key] = options[key].toString();\n        }\n    }\n    return url;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAM,OAAO;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACe,SAAR,aAA8B,QAAQ,SAAS;AARtD;AASI,MAAI,QAAQ,MAAM;AACd,QAAI,QAAQ,UAAU;AAClB,YAAM,IAAI,UAAU,0DAA0D;AAAA,IAClF;AACA,QAAI,QAAQ,QAAQ;AAChB,YAAM,IAAI,UAAU,wDAAwD;AAAA,IAChF;AACA,QAAI,QAAQ,cAAc;AACtB,YAAM,IAAI,UAAU,8DAA8D;AAAA,IACtF;AAAA,EACJ;AACA,MAAI,QAAQ,UAAU,QAAQ,cAAc;AACxC,UAAM,IAAI,UAAU,gEAAgE;AAAA,EACxF;AACA,MAAI,CAAC,QAAQ;AACT,QAAI,CAAC,QAAQ,UAAU;AACnB,YAAM,IAAI,UAAU,2BAA2B;AAAA,IACnD;AACA,aAAS,GAAG,QAAQ,cAAa,mBAAQ,aAAR,YAAoB,QAAQ,SAA5B,YAAoC;AAAA,EACzE;AACA,QAAM,MAAM,IAAI,IAAI,MAAM;AAC1B,MAAI,QAAQ,MAAM;AACd,UAAM,cAAc,QAAQ,KAAK,QAAQ,GAAG;AAC5C,QAAI,gBAAgB,IAAI;AACpB,cAAQ,WAAW,QAAQ;AAAA,IAC/B,OACK;AACD,cAAQ,WAAW,QAAQ,KAAK,MAAM,GAAG,WAAW;AACpD,cAAQ,SAAS,QAAQ,KAAK,MAAM,cAAc,CAAC;AAAA,IACvD;AACA,WAAO,QAAQ;AAAA,EACnB;AACA,aAAW,OAAO,MAAM;AACpB,QAAI,QAAQ,MAAM;AACd,UAAI,OAAO,QAAQ,KAAK,SAAS;AAAA,IACrC;AAAA,EACJ;AACA,SAAO;AACX;",
  "names": []
}
