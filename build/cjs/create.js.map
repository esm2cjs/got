{
  "version": 3,
  "sources": ["../esm/create.js"],
  "sourcesContent": ["import is, { assert } from '@esm2cjs/is';\nimport asPromise from './as-promise/index.js';\nimport Request from './core/index.js';\nimport Options from './core/options.js';\n// The `delay` package weighs 10KB (!)\nconst delay = async (ms) => new Promise(resolve => {\n    setTimeout(resolve, ms);\n});\nconst isGotInstance = (value) => is.function_(value);\nconst aliases = [\n    'get',\n    'post',\n    'put',\n    'patch',\n    'head',\n    'delete',\n];\nconst create = (defaults) => {\n    defaults = {\n        options: new Options(undefined, undefined, defaults.options),\n        handlers: [...defaults.handlers],\n        mutableDefaults: defaults.mutableDefaults,\n    };\n    Object.defineProperty(defaults, 'mutableDefaults', {\n        enumerable: true,\n        configurable: false,\n        writable: false,\n    });\n    // Got interface\n    const got = ((url, options, defaultOptions = defaults.options) => {\n        const request = new Request(url, options, defaultOptions);\n        let promise;\n        const lastHandler = (normalized) => {\n            // Note: `options` is `undefined` when `new Options(...)` fails\n            request.options = normalized;\n            request._noPipe = !normalized.isStream;\n            void request.flush();\n            if (normalized.isStream) {\n                return request;\n            }\n            if (!promise) {\n                promise = asPromise(request);\n            }\n            return promise;\n        };\n        let iteration = 0;\n        const iterateHandlers = (newOptions) => {\n            const handler = defaults.handlers[iteration++] ?? lastHandler;\n            const result = handler(newOptions, iterateHandlers);\n            if (is.promise(result) && !request.options.isStream) {\n                if (!promise) {\n                    promise = asPromise(request);\n                }\n                if (result !== promise) {\n                    const descriptors = Object.getOwnPropertyDescriptors(promise);\n                    for (const key in descriptors) {\n                        if (key in result) {\n                            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                            delete descriptors[key];\n                        }\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    Object.defineProperties(result, descriptors);\n                    result.cancel = promise.cancel;\n                }\n            }\n            return result;\n        };\n        return iterateHandlers(request.options);\n    });\n    got.extend = (...instancesOrOptions) => {\n        const options = new Options(undefined, undefined, defaults.options);\n        const handlers = [...defaults.handlers];\n        let mutableDefaults;\n        for (const value of instancesOrOptions) {\n            if (isGotInstance(value)) {\n                options.merge(value.defaults.options);\n                handlers.push(...value.defaults.handlers);\n                mutableDefaults = value.defaults.mutableDefaults;\n            }\n            else {\n                options.merge(value);\n                if (value.handlers) {\n                    handlers.push(...value.handlers);\n                }\n                mutableDefaults = value.mutableDefaults;\n            }\n        }\n        return create({\n            options,\n            handlers,\n            mutableDefaults: Boolean(mutableDefaults),\n        });\n    };\n    // Pagination\n    const paginateEach = (async function* (url, options) {\n        let normalizedOptions = new Options(url, options, defaults.options);\n        normalizedOptions.resolveBodyOnly = false;\n        const { pagination } = normalizedOptions;\n        assert.function_(pagination.transform);\n        assert.function_(pagination.shouldContinue);\n        assert.function_(pagination.filter);\n        assert.function_(pagination.paginate);\n        assert.number(pagination.countLimit);\n        assert.number(pagination.requestLimit);\n        assert.number(pagination.backoff);\n        const allItems = [];\n        let { countLimit } = pagination;\n        let numberOfRequests = 0;\n        while (numberOfRequests < pagination.requestLimit) {\n            if (numberOfRequests !== 0) {\n                // eslint-disable-next-line no-await-in-loop\n                await delay(pagination.backoff);\n            }\n            // eslint-disable-next-line no-await-in-loop\n            const response = (await got(undefined, undefined, normalizedOptions));\n            // eslint-disable-next-line no-await-in-loop\n            const parsed = await pagination.transform(response);\n            const currentItems = [];\n            assert.array(parsed);\n            for (const item of parsed) {\n                if (pagination.filter({ item, currentItems, allItems })) {\n                    if (!pagination.shouldContinue({ item, currentItems, allItems })) {\n                        return;\n                    }\n                    yield item;\n                    if (pagination.stackAllItems) {\n                        allItems.push(item);\n                    }\n                    currentItems.push(item);\n                    if (--countLimit <= 0) {\n                        return;\n                    }\n                }\n            }\n            const optionsToMerge = pagination.paginate({\n                response,\n                currentItems,\n                allItems,\n            });\n            if (optionsToMerge === false) {\n                return;\n            }\n            if (optionsToMerge === response.request.options) {\n                normalizedOptions = response.request.options;\n            }\n            else {\n                normalizedOptions.merge(optionsToMerge);\n                assert.any([is.urlInstance, is.undefined], optionsToMerge.url);\n                if (optionsToMerge.url !== undefined) {\n                    normalizedOptions.prefixUrl = '';\n                    normalizedOptions.url = optionsToMerge.url;\n                }\n            }\n            numberOfRequests++;\n        }\n    });\n    got.paginate = paginateEach;\n    got.paginate.all = (async (url, options) => {\n        const results = [];\n        for await (const item of paginateEach(url, options)) {\n            results.push(item);\n        }\n        return results;\n    });\n    // For those who like very descriptive names\n    got.paginate.each = paginateEach;\n    // Stream API\n    got.stream = ((url, options) => got(url, { ...options, isStream: true }));\n    // Shortcuts\n    for (const method of aliases) {\n        got[method] = ((url, options) => got(url, { ...options, method }));\n        got.stream[method] = ((url, options) => got(url, { ...options, method, isStream: true }));\n    }\n    if (!defaults.mutableDefaults) {\n        Object.freeze(defaults.handlers);\n        defaults.options.freeze();\n    }\n    Object.defineProperty(got, 'defaults', {\n        value: defaults,\n        writable: false,\n        configurable: false,\n        enumerable: true,\n    });\n    return got;\n};\nexport default create;\n"],
  "mappings": "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",
  "names": ["is", "Options", "Request", "asPromise"]
}
